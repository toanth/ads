@article{elias,
author = {Elias, Peter},
title = {Efficient Storage and Retrieval by Content and Address of Static Files},
year = {1974},
issue_date = {April 1974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {21},
number = {2},
issn = {0004-5411},
url = {https://doi.org/10.1145/321812.321820},
doi = {10.1145/321812.321820},
abstract = {We consider a set of static files or inventories, each consisting of the same number of entries, each entry a binary word of the same fixed length selected (with replacement) from the set of all binary sequences of that length, and the entries in each file sorted into lexical order. We also consider several retrieval questions of interest for each such file. One is to find the value of the jth entry, another to find the number of entries of value less than k.When a binary representation of such a file is stored in computer memory and an algorithm or machine which knows only the file parameters (i.e. number of entries, number of possible values per entry) accesses some of the stored bits to answer a retrieval question, the number of bits stored and the number of bits accessed per retrieval question are two cost measures for the storage and retrieval task which have been used by Minsky and Papert. Bits stored depends on the representation chosen: bits accessed also depends on the retrieval question asked and on the algorithm used.We give firm lower bounds to minimax measures of bits stored and bits accessed for each of four retrieval questions, and construct representations and algorithms for a bit-addressable machine which come within factors of two or three of attaining all four bounds at once for files of any size. All four factors approach one for large enough files.},
journal = {J. ACM},
month = {apr},
pages = {246â€“260},
numpages = {15}
}

@book{fano,
  title={On the number of bits required to implement an associative memory},
  author={Fano, Robert Mario},
  year={1971},
  publisher={Massachusetts Institute of Technology, Project MAC}
}

@misc{folien,
author={Kurpicz, Florian},
title={Advanced Data Structures Lecture 04: Predecessor and Range Minimum Query Data Structures},
year={2023},
url={https://algo2.iti.kit.edu/download/kurpicz/2023_advanced_data_structures/04_predecessor_rmq_handout.pdf}
}

@article{succinctRmq,
author = {Fischer, Johannes and Heun, Volker},
title = {Space-Efficient Preprocessing Schemes for Range Minimum Queries on Static Arrays},
journal = {SIAM Journal on Computing},
volume = {40},
number = {2},
pages = {465-492},
year = {2011},
doi = {10.1137/090779759},
URL = {https://doi.org/10.1137/090779759},
eprint = {https://doi.org/10.1137/090779759}
}

@misc{simpleEfficient,
title={Simple and Efficient Fully-Functional Succinct Trees},
author={Joshimar Cordova and Gonzalo Navarro},
year={2016},
eprint={1601.06939},
archivePrefix={arXiv},
primaryClass={cs.DS}
}
